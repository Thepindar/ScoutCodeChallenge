//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Scout.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ScoutEntities : DbContext
    {
        public ScoutEntities()
            : base("name=ScoutEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bin> Bins { get; set; }
        public virtual DbSet<CustomerOrder> CustomerOrders { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
        public virtual DbSet<OrderLine> OrderLines { get; set; }
        public virtual DbSet<Product> Products { get; set; }
    
        [DbFunction("ScoutEntities", "fnc_List2Table")]
        public virtual IQueryable<fnc_List2Table_Result> fnc_List2Table(string list, string delim)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimParameter = delim != null ?
                new ObjectParameter("Delim", delim) :
                new ObjectParameter("Delim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnc_List2Table_Result>("[ScoutEntities].[fnc_List2Table](@List, @Delim)", listParameter, delimParameter);
        }
    
        public virtual int usp_InsUpd_Bins(string binName)
        {
            var binNameParameter = binName != null ?
                new ObjectParameter("BinName", binName) :
                new ObjectParameter("BinName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsUpd_Bins", binNameParameter);
        }
    
        public virtual ObjectResult<usp_View_Bins_Result> usp_View_Bins(string binsList)
        {
            var binsListParameter = binsList != null ?
                new ObjectParameter("BinsList", binsList) :
                new ObjectParameter("BinsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_View_Bins_Result>("usp_View_Bins", binsListParameter);
        }
    
        public virtual ObjectResult<usp_View_Inventory_Result> usp_View_Inventory(string productList, string binsList)
        {
            var productListParameter = productList != null ?
                new ObjectParameter("ProductList", productList) :
                new ObjectParameter("ProductList", typeof(string));
    
            var binsListParameter = binsList != null ?
                new ObjectParameter("BinsList", binsList) :
                new ObjectParameter("BinsList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_View_Inventory_Result>("usp_View_Inventory", productListParameter, binsListParameter);
        }
    
        public virtual ObjectResult<usp_View_Orders_Result> usp_View_Orders(string orderList)
        {
            var orderListParameter = orderList != null ?
                new ObjectParameter("OrderList", orderList) :
                new ObjectParameter("OrderList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_View_Orders_Result>("usp_View_Orders", orderListParameter);
        }
    }
}
