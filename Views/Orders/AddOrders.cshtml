@model Scout.Models.CustomerOrderViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Orders Entry</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm("AddOrders", "Orders", FormMethod.Post)) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Orders Entry</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<br/>
			<div class="form-group">
				<div class="col-md-10">
				@Html.HiddenFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control" } })
				</div>
            </div>
    
			<br/>
            <div class="form-group">
                @Html.LabelFor(model => model.DateOrdered, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOrdered, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOrdered, "", new { @class = "text-danger" })
                </div>
            </div>
    
			<br/>
			<div class="form-group">
				@Html.LabelFor(model => model.ProductDesc, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(n => n.SelectedProductID, Model.ProductList, "No Products Selected")
					@Html.ValidationMessageFor(model => model.ProductDesc, "", new { @class = "text-danger" })
				</div>
			</div>
    
			<br/>
            <div class="form-group">
                @Html.LabelFor(model => model.QTY, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.QTY, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QTY, "", new { @class = "text-danger" })
                </div>
            </div>

			<br/>
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
            </div>
    
			<br/>
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerAddress, "", new { @class = "text-danger" })
                </div>
            </div>
    
			<br/>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10" style="color:green">
					@ViewBag.Message
				</div>
			</div>
        </div>
    }
    
	<br/><br/>
    <div>
        @Html.ActionLink("Back to Orders", "Orders", "Home")
    </div>
</body>
</html>
